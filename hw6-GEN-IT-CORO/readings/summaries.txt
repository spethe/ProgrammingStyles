Review: A Relational model of data for large shared data banks

	The author E.Codd writes this paper when there was a situation where the amount of data was getting large and was tightly coupled to the application. The need was to bring in transparency with regards to structure of the stored data. The implementation of the structure of large shared data banks was a pressing issue. What Codd introduced was a structuring of the data, which was transparent and non-deductive. Codd applied the mathematical concept of ‘relations’ to structure data. This relational model provided the much needed structure to large data banks. 
	The relational model took care of redundancy, consistency and dependencies. The ordering dependencies and indexing dependencies were provided. The dependencies on hard coded static user access paths was discontinued with the use of this relational model. Hence, the terminal activities and application programs became independent of user access paths.
	The basic tenet of the relational model was the ‘n-ary relation’ among domains. If the data model has a ‘n-ary’ relation, typically, a row would constitute of a n-tuple. The significance of every column i.e. domain is conveyed by naming it appropriately. Then came into picture necessary bits and pieces which completed the relational model. The CRUD operations on n-ary relations, primary and foreign keys enriched the structure of data. The advantages obtained by cross referencing domains of relations really made it extremely useful to model application data.
	Another concept in relational model of data that made data structuring more organized was ‘normalization’. Converting the relations in a normal form suggests to eliminate non-simple domains. If we picture a subset of relations depicted by a tree structure, we can conduct normalization by taking the primary key of the parent and expanding it to its sub ordinate relations by planting the primary key in those relations as well. 
	The beauty of Codd’s paper is in its simplicity and lucidity. This was the simplest explanation of normalization by far. Students of relational databases must be encouraged to refer to this when they first read about normalization. 
